/*
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateFish400Response;
import org.openapitools.client.model.DeleteFishBadRequest;
import org.openapitools.client.model.DeleteFishConflict;
import org.openapitools.client.model.DeleteFishInternalServerError;
import org.openapitools.client.model.DeleteFishNotFound;
import org.openapitools.client.model.Fish;
import org.openapitools.client.model.FishSummary;
import org.openapitools.client.model.GetFishListBadRequest;
import org.openapitools.client.model.GetFishListInternalServerError;
import org.openapitools.client.model.GetFishListNotFound;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FishApi
 */
@Disabled
public class FishApiTest {

    private final FishApi api = new FishApi();

    /**
     * Create fish
     *
     * Create a fish
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFishTest() throws ApiException {
        Fish fish = null;
        Fish response = api.createFish(fish);
        // TODO: test validations
    }

    /**
     * delete fish
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFishTest() throws ApiException {
        Integer fishId = null;
        Object response = api.deleteFish(fishId);
        // TODO: test validations
    }

    /**
     * Get Fish
     *
     * Get fish based on id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFishTest() throws ApiException {
        Integer fishId = null;
        Fish response = api.getFish(fishId);
        // TODO: test validations
    }

    /**
     * Get fish list
     *
     * Fetches a comprehensive list of all fish. Each fish object includes details like fish name and location.  This endpoint is paginated using the &#39;page&#39; syntax.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFishListTest() throws ApiException {
        String locationId = null;
        String fishName = null;
        List<FishSummary> response = api.getFishList(locationId, fishName);
        // TODO: test validations
    }

}
